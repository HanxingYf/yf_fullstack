//在栈开辟一个空间a，存放a的指针地址，设指针地址为address2a，同时在堆开辟一个空间，设这空间为A，存放a对象数据
let a = {
  no: 1,
  per: {
   name: "jack",
  },
  per2: {
   name: "rose"
  }
 }
 
 //在栈开辟一个空间b，存放b的指针地址，设指针地址为address2b，同时在堆开辟一个空间，设这空间为B，存放b对象数据
 var b = {};
 
 //对a的数据进行循环，判断如果有key，就把值赋到B对应的key位置
 //这个循环，遇到数据类型为基本数据类型，赋的是值；遇到引用数据类型，赋的是指针地址
 for(var p in a) {
  if(a.hasOwnProperty(p)) {
   b[p] = a[p]
  }
 }
 
 //对b的第一层修改
 b.no = 1314;
 b.per2 = [];
 
 //对b的第二层修改
 b.per.name = "王五";
 
 //浅拷贝，修改b后，第一层修改都不影响原数据，第二层以及以上层次的修改都影响原数据
 //当前没有写第三层及以上层次，可自行测试。
 console.log(a, b)